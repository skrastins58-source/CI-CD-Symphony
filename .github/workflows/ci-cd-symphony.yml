
=======
permissions:
  contents: read
  pull-requests: write

name: 🎼 CI/CD Symphony

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'

jobs:
  # Analysis job - runs performance, coverage and bundle analysis
  analysis:
    name: 📊 Metrics Analysis
    runs-on: ubuntu-latest
    outputs:
      results: ${{ steps.analysis.outputs.results }}
      badges: ${{ steps.badges.outputs.badges }}
    
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test

      - name: 📊 Run analysis
        id: analysis
        run: node scripts/run-analysis.js

      - name: 🏷️ Generate badges
        id: badges
        run: node scripts/generate-badges.js

      - name: 📋 Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-cd-reports
          path: |
            reports/
            badges/
            coverage/
            dist/
          retention-days: 30

      - name: 📊 Comment on PR
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
        run: node scripts/comment-pr.js

  # Slack notification job
  notify:
    name: 💬 Slack Notification  
    runs-on: ubuntu-latest
    needs: analysis
    if: always() && (needs.analysis.result == 'success' || needs.analysis.result == 'failure')
    
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📥 Download reports
        uses: actions/download-artifact@v4
        with:
          name: ci-cd-reports
          path: .

      - name: 💬 Send Slack notification
        if: vars.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ vars.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL || '#ci-cd' }}
          SLACK_USERNAME: 'CI/CD Symphony'
          SLACK_ICON: ':musical_note:'
          SLACK_ONLY_FAILURES: ${{ vars.SLACK_ONLY_FAILURES || 'false' }}
        run: node scripts/slack-notify.js

  # Baseline update job - only runs on main branch after merge
  baseline:
    name: 🎯 Update Baseline
    runs-on: ubuntu-latest
    needs: analysis
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && needs.analysis.result == 'success'
    
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📥 Download reports
        uses: actions/download-artifact@v4
        with:
          name: ci-cd-reports
          path: .

      - name: 🎯 Update baseline
        run: node scripts/update-baseline.js

      - name: 💾 Commit baseline updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add baselines/
          if git diff --staged --quiet; then
            echo "No baseline changes to commit"
          else
            git commit -m "📊 Update baseline metrics [skip ci]"
            git push
          fi

      - name: 📋 Upload baseline artifacts
        uses: actions/upload-artifact@v4
        with:
          name: baseline-data
          path: baselines/
          retention-days: 90

  # Security scan job
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run npm audit
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: 🔒 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Deployment preview (for PRs)
  preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: analysis
    if: github.event_name == 'pull_request' && needs.analysis.result == 'success'
    
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build
        run: npm run build

      - name: 📥 Download reports
        uses: actions/download-artifact@v4
        with:
          name: ci-cd-reports
          path: reports-temp

      - name: 📋 Copy reports to dist
        run: |
          mkdir -p dist/reports
          cp -r reports-temp/reports/* dist/reports/ || true
          cp -r reports-temp/badges/* dist/reports/ || true

      - name: 🚀 Deploy to GitHub Pages (Preview)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: pr-${{ github.event.number }}
          keep_files: false

      - name: 💬 Add preview comment
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${prNumber}/`;
            

            const comment = `## 🚀 Preview Deployment
            
            Your changes have been deployed to a preview environment:
            
            🔗 **Preview URL:** ${previewUrl}
            📊 **Reports:** ${previewUrl}reports/
            
=======
            const comment = `## 🚀 Preview Deployment`\n            
            Your changes have been deployed to a preview environment:\n            
            🔗 **Preview URL:** ${previewUrl}\n            📊 **Reports:** ${previewUrl}reports/\n            

            *This preview will be updated with each new commit to this PR.*`;
            
            // Find existing preview comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('🚀 Preview Deployment') && 
              comment.user.login === 'github-actions[bot]'
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
            - name: Notify Slack
  run: |
    curl -X POST -H 'Content-type: application/json' \
    --data '{"text":"🎉 New release published: v1.2.3\n🔗 https://github.com/skrastins58-source/CI-CD-Symphony/releases"}' \
    https://hooks.slack.com/services/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
- name: Notify Slack
  run: |
    curl -X POST -H 'Content-type: application/json' \
    --data '{"text":"🎉 New release published: v1.2.3\n🔗 https://github.com/skrastins58-source/CI-CD-Symphony/releases"}' \
   https://hooks.slack.com/services/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
   - name: Notify Slack
  run: |
    curl -X POST -H 'Content-type: application/json' \
    --data '{
      "text": "*🎉 Jauns release: v1.2.3*\n📝 Changelog: <https://github.com/skrastins58-source/CI-CD-Symphony/releases/tag/v1.2.3>\n📊 Coverage: 93.2%\n✅ Status: Build Passed"
    }' \
    https://hooks.slack.com/services/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
    - name: Generate Coverage Badge
  uses: kevinfjiang/coverage-badge@v1
  with:
    coverage: 93.2
    change_file: ./README.md
    repo_token: ${{ secrets.GITHUB_TOKEN }}
<!-- Coverage Comment:Begin -->
![Coverage](https://img.shields.io/badge/Coverage-93.2%25-green)
<!-- Coverage Comment:End -->
if: success() && github.ref == 'refs/heads/main'


